{{- $baseurl := .Site.BaseURL -}}
{{- $pctx := . -}}
{{- if .IsHome -}}{{ $pctx = .Site }}{{- end -}}
{{- $pages := slice -}}
{{- if or $.IsHome $.IsSection -}}
{{- $pages = $pctx.RegularPages -}}
{{- else -}}
{{- $pages = $pctx.Pages -}}
{{- end -}}
{{- $limit := .Site.Config.Services.RSS.Limit -}}
{{- if ge $limit 1 -}}
{{- $pages = $pages | first $limit -}}
{{- end -}}
{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}</title>
    <link>{{ .Permalink }}</link>
    <description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>Hugo -- gohugo.io</generator>{{ with .Site.LanguageCode }}
    <language>{{.}}</language>{{end}}{{ with .Site.Author.email }}
    <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>{{end}}{{ with .Site.Author.email }}
    <webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>{{end}}{{ with .Site.Copyright }}
    <copyright>{{.}}</copyright>{{end}}{{ if not .Date.IsZero }}
    <lastBuildDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>{{ end }}
    {{- with .OutputFormats.Get "RSS" -}}
    {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{- end -}}
    {{ range $pages }}
    <item>
      <title>{{ .Title }}</title>
      <link>{{ .Permalink }}</link>
      <pubDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>
      {{ with .Site.Author.email }}<author>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</author>{{end}}
      <guid>{{ .Permalink }}</guid>
      
      
      {{ $content := .Content }}
      <!-- relative images/URLs do not work in some feed readers. Thanks, Peter. See render-image.html -->
      {{ $content = replaceRE `a href="(#.*?)"` (printf "%s%s%s" "a href=\"" .Permalink "$1\"") $content }}
      {{ $content = replaceRE `a href="^../(.*?)"` (printf "%s%s%s" "a href=\"" .Permalink "../$1\"") $content }}
      {{ $content = replaceRE `a href="/(.*?)"` (printf "%s%s%s" "a href=\"" $baseurl "$1\"") $content }}
      <description>
          {{ `<![CDATA[ ` | safeHTML }}
          {{ if and (.Params.cover) (not (in .Params.cover.src "http")) }}
          {{ $image := .Resources.GetMatch .Params.cover.src }}
            <p>
              <img align="left" hspace="5" src="{{ ($image.Resize "x550 webp q100").RelPermalink }}"/>
            </p>
          {{ else if (in .Params.cover.src "http") }}
            <p>
              <img align="left" hspace="5" src="{{ .Params.cover.src }}"/>
            </p>
          {{ end }}
          {{ $content | safeHTML }}
          {{ if .Params.reply }}
            <a href="{{ .Params.reply.url }}" class="u-in-reply-to break-all"></a>
          {{ end }}
          {{ if .Params.like }}
            <a href="{{ .Params.like.url }}" class="u-like-of break-all"></a>
          {{ end }}
          {{ if .Params.repost }}
            <a href="{{ .Params.repost.url }}" class="u-repost-of break-all"></a>
          {{ end }}
          {{ if .Params.quote }}
            <cite class="h-cite u-quotation-of"><a href="{{ .Params.quote.url }}" class="u-url break-all"></a></cite>
          {{ end }}
          {{ if .Params.bridgy }}
            {{ range .Params.bridgy }}
              <a href="https://brid.gy/publish/{{ . }}"></a>
            {{ end }}
          {{ end }}
          ]]>
      </description>


    </item>
    {{ end }}
  </channel>
</rss>